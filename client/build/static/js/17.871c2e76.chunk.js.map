{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","images/background.jpg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","images/icon.jpg","../node_modules/reactstrap/es/Form.js","pages/Registration/Registration.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","module","exports","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","propTypes","children","PropTypes","node","inline","bool","tag","tagPropType","innerRef","oneOfType","func","string","className","cssModule","Form","_Component","props","_this","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","Component","defaultProps","Registration","useState","username","password","confirmPassword","dob","telegram","input","setInput","setErr","passwordShown","setPasswordShown","passwordShown1","setPasswordShown1","history","useHistory","onInputChange","e","prev","validateInput","stateObj","style","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","md","width","height","onSubmit","event","preventDefault","handleData","data","alert","title","color","marginTop","marginBottom","cursor","onClick","src","icon","paddingBottom","for","fontSize","class","addonType","type","placeholder","onChange","onBlur","borderColor","backgroundColor","xs","fontPosition"],"mappings":"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","file":"static/js/17.871c2e76.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/background.89443a23.jpg\";","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","module.exports = __webpack_public_path__ + \"static/media/icon.83fbbf96.jpg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Card, \r\n    CardBody, \r\n    CardGroup, \r\n    Col, \r\n    Container, \r\n    Form, \r\n    Input, \r\n    InputGroup, \r\n    InputGroupAddon, \r\n    InputGroupText, \r\n    Row \r\n} from \"reactstrap\";\r\nimport { handleData } from \"../../Client_API\";\r\nimport background from \"../../images/background.jpg\"\r\nimport icon from \"../../images/icon.jpg\"\r\n\r\nfunction Registration() {\r\n    const [ input, setInput ] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        dob: \"\",\r\n        telegram: \"\"\r\n    })\r\n\r\n    const [ err, setErr ] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        dob: \"\",\r\n        telegram: \"\"\r\n    })\r\n\r\n    const [ passwordShown, setPasswordShown ] = useState(false);\r\n    const [ passwordShown1, setPasswordShown1 ] = useState(false);\r\n\r\n    const history = useHistory();\r\n \r\n    const onInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setInput(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n        validateInput(e);\r\n    }\r\n\r\n    const togglePassword = () => {\r\n        setPasswordShown(!passwordShown)\r\n    }\r\n\r\n    const togglePassword1 = () => {\r\n        setPasswordShown1(!passwordShown1)\r\n    }\r\n\r\n    const validateInput = (e) => {\r\n        let { name, value } = e.target;\r\n        setErr(prev => {\r\n            const stateObj = { ...prev, [name]: \"\" };\r\n        \r\n            switch (name) {\r\n                case \"username\":\r\n                    if (!value) {\r\n                        stateObj[name] = \"Please enter Username.\";\r\n                    }\r\n                    break;\r\n\r\n                case \"dob\":\r\n                    if (!value) {\r\n                        stateObj[name] = \"Please enter your Date of Birth.\";\r\n                    }\r\n                    break;\r\n        \r\n                case \"password\":\r\n                    if (!value) {\r\n                        stateObj[name] = \"Please enter Password.\";\r\n                    } \r\n                    else \r\n                    if (input.confirmPassword && value !== input.confirmPassword) {\r\n                        stateObj[\"confirmPassword\"] = \"Password and Confirm Password does not match.\";\r\n                    } \r\n                    else {\r\n                        stateObj[\"confirmPassword\"] = input.confirmPassword ? \"\" : err.confirmPassword;\r\n                    }\r\n                    break;\r\n        \r\n                case \"confirmPassword\":\r\n                    if (!value) {\r\n                        stateObj[name] = \"Please enter Password.\";\r\n                    } \r\n                    else \r\n                    if (input.password && value !== input.password) {\r\n                        stateObj[name] = \"Password and Confirm Password does not match.\";\r\n                    }\r\n                    break;\r\n\r\n                case \"telegram\":\r\n                    if (!value) {\r\n                        stateObj[name] = \"Please enter Telegram Chat ID.\"\r\n                    }\r\n                    break;\r\n        \r\n                default:\r\n                break;\r\n            }\r\n        \r\n            return stateObj;\r\n        });\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (input.username !== \"\" && \r\n            input.password !== \"\" && \r\n            input.confirmPassword !== \"\" && \r\n            input.dob !== \"\" && \r\n            input.telegram !== \"\")\r\n        {\r\n            history.push(\"/verification\")\r\n            handleData(\"/telegramVerification\", \"POST\", { data: input })\r\n        }\r\n        else {\r\n            alert(\"Please fill in all the blanks!\")\r\n        }\r\n    }\r\n\r\n    const loginPage = () => {\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    return (\r\n        <div style = {{  \r\n            backgroundImage: `url(${background})`,\r\n            backgroundPosition: \"right bottom\",\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\"\r\n        }}>\r\n            <div className = \"app flex-row-reverse align-items-center\">\r\n                <Container >\r\n                    <Row className = \"justify-content-center\">\r\n                        <Col md = \"14\">\r\n                            <CardGroup>\r\n                                <Card className = \"p-3\" style = {{ width: 400, height: 900 }}>\r\n                                    <CardBody>\r\n                                        <Form onSubmit = {onSubmit}>\r\n                                            <Row>\r\n                                                <i \r\n                                                    className = \"fa fa-reply\" \r\n                                                    title = \"Back to login\" \r\n                                                    style = {{ color: \"black\", marginTop: -10, marginBottom: 30, cursor: \"pointer\" }}\r\n                                                    onClick = {loginPage}\r\n                                                >\r\n                                                    &nbsp;\r\n                                                    &nbsp;\r\n                                                    <strong>\r\n                                                        Back\r\n                                                    </strong>\r\n                                                </i>\r\n                                            </Row>\r\n                                            <Row className = \"justify-content-center\">\r\n                                                <img src = {icon} style = {{ height: 200, paddingBottom: 10, marginTop: -30 }}/>\r\n                                            </Row>\r\n                                            <Row className = \"justify-content-center\">\r\n                                                <p className = \"text-muted\" style = {{ backgroundPosition: \"center\" }}> Create your very own account. </p>\r\n                                            </Row>\r\n\r\n                                            <Row style = {{ marginBottom: err.username ? 0 : 21 }}>\r\n                                                <label for = \"username\" style = {{ fontSize: 15 }}>\r\n                                                    Username\r\n                                                    <sup class = \"required\" title = \"Required\" style = {{ color: \"red\" }}> * </sup>\r\n                                                </label>\r\n                                                <InputGroup className = \"mb-1\">\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText>\r\n                                                            <i className = \"icon-user\"></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                    <Input\r\n                                                        type = \"text\"\r\n                                                        name = \"username\"\r\n                                                        placeholder = \"Enter Username\"\r\n                                                        value = {input.username}\r\n                                                        onChange = {onInputChange}\r\n                                                        onBlur = {validateInput}\r\n                                                        style = {{ borderColor: err.username ? \"red\" : \"\" }}\r\n                                                    >\r\n                                                    </Input>\r\n                                                </InputGroup>\r\n                                                {err.username && <span className = \"err\"> { err.username } </span>}\r\n                                            </Row>\r\n\r\n                                            <Row style = {{ marginBottom: err.dob ? 0 : 21 }}>\r\n                                                <label for = \"dob\" style = {{ fontSize: 15 }}>\r\n                                                    Date of Birth\r\n                                                    <sup class = \"required\" title = \"Required\" style = {{ color: \"red\" }}> * </sup>\r\n                                                </label>\r\n                                                <InputGroup className = \"mb-1\">\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText>\r\n                                                            <i className = \"icon-user\"></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                    <Input\r\n                                                        type = \"date\"\r\n                                                        name = \"dob\"\r\n                                                        placeholder = \"Enter D.O.B.\"\r\n                                                        value = {input.dob}\r\n                                                        onChange = {onInputChange}\r\n                                                        onBlur = {validateInput}\r\n                                                        style = {{ borderColor: err.dob ? \"red\" : \"\" }}\r\n                                                    >\r\n                                                    </Input>\r\n                                                </InputGroup>\r\n                                                {err.dob && <span className = \"err\"> { err.dob } </span>}\r\n                                            </Row>\r\n\r\n                                            <Row style = {{ marginBottom: err.password ? 0 : 21 }}>\r\n                                                <label for = \"password\" style = {{ fontSize: 15 }}>\r\n                                                    Password\r\n                                                    <sup class = \"required\" title = \"Required\" style = {{ color: \"red\" }}> * </sup>\r\n                                                </label>\r\n                                                <InputGroup className = \"mb-1\">\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText>\r\n                                                            <i className = \"icon-lock\"></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                    <Input\r\n                                                        type = {passwordShown ? \"text\" : \"password\"}\r\n                                                        name = \"password\"\r\n                                                        placeholder = \"Enter Password\"\r\n                                                        value = {input.password}\r\n                                                        onChange = {onInputChange}\r\n                                                        onBlur = {validateInput}\r\n                                                        style = {{ borderColor: err.password ? \"red\" : \"\" }}\r\n                                                    >\r\n                                                    </Input>\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText style = {{ backgroundColor: \"white\" }}>\r\n                                                            <i className = \"fa fa-eye\" onClick = {togglePassword}></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                </InputGroup>\r\n                                                {err.password && <span className = \"err\"> {err.password} </span>}\r\n                                            </Row>\r\n\r\n                                            <Row style = {{ marginBottom: err.confirmPassword ? 0 : 21 }}>\r\n                                                <label for = \"confirmPassword\" style = {{ fontSize: 15 }}>\r\n                                                    Confirm Password\r\n                                                    <sup class = \"required\" title = \"Required\" style = {{ color: \"red\" }}> * </sup>\r\n                                                </label>\r\n                                                <InputGroup className = \"mb-1\">\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText>\r\n                                                            <i className = \"icon-lock\"></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                    <Input\r\n                                                        type = {passwordShown1 ? \"text\" : \"password\"}\r\n                                                        name = \"confirmPassword\"\r\n                                                        placeholder = \"Enter Confirm Password\"\r\n                                                        value = {input.confirmPassword}\r\n                                                        onChange = {onInputChange}\r\n                                                        onBlur = {validateInput}\r\n                                                        style = {{ borderColor: err.confirmPassword ? \"red\" : \"\" }}\r\n                                                    >\r\n                                                    </Input>\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText style = {{ backgroundColor: \"white\" }}>\r\n                                                            <i className = \"fa fa-eye\" onClick = {togglePassword1}></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                </InputGroup>\r\n                                                {err.confirmPassword && <span className = \"err\"> {err.confirmPassword} </span>}\r\n                                            </Row>\r\n\r\n                                            <Row>\r\n                                                <label for = \"telegram\" style = {{ fontSize: 15 }}>\r\n                                                    Telegram Chat ID\r\n                                                    <sup class = \"required\" title = \"Required\" style = {{ color: \"red\" }}> * </sup>\r\n                                                </label>\r\n                                                <InputGroup className = { err.telegram ? \"mb-1\" : \"mb-4\" }>\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText>\r\n                                                            <i className = \"fa fa-envelope-o\"></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                    <Input\r\n                                                        type = \"text\"\r\n                                                        name = \"telegram\"\r\n                                                        placeholder = \"Enter Telegram Chat ID\"\r\n                                                        value = {input.telegram}\r\n                                                        onChange = {onInputChange}\r\n                                                        onBlur = {validateInput}\r\n                                                        style = {{ borderColor: err.telegram ? \"red\" : \"\" }}\r\n                                                    >\r\n                                                    </Input>\r\n                                                </InputGroup>\r\n                                                {err.telegram && <span className = \"err\"> {err.telegram} </span>}\r\n                                            </Row>\r\n\r\n                                            <Row className = \"justify-content-center\">\r\n                                                <Col xs = \"6\">\r\n                                                    <Input type = \"submit\" value = \"Create\" color = \"primary\" className = \"px-6\" name = \"Create\" />\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row className = \"justify-content-center\">\r\n                                                <p className = \"text-muted\" style = {{ backgroundPosition: \"center\", fontPosition: \"center\", marginTop: 15, marginBottom: -50 }}> Webpage solely built by YongJun. </p>\r\n                                            </Row>\r\n                                        </Form>\r\n                                    </CardBody>\r\n                                </Card> \r\n                            </CardGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container />\r\n                <Container />\r\n                <Container />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration;"],"sourceRoot":""}