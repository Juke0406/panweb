{"version":3,"sources":["images/background.jpg","images/QR.jpg","pages/Verification/Verification.js"],"names":["module","exports","Verification","useState","code","setCode","random","setRandom","counter","setCounter","first","setTries","history","useHistory","useEffect","timer","setInterval","clearInterval","style","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","className","md","textAlign","fontSize","marginTop","src","QR","marginRight","width","marginLeft","type","name","placeholder","value","onChange","e","target","outline","color","length","onClick","event","preventDefault","handleData","then","results","status","push","alert","position","x","Math","floor"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,0MC+H5BC,UA9Gf,WAAyB,IAAD,EACMC,mBAAS,IADf,mBACZC,EADY,KACNC,EADM,OAEUF,mBAAS,IAFnB,mBAEZG,EAFY,KAEJC,EAFI,OAGYJ,mBAAS,GAHrB,mBAGZK,EAHY,KAGHC,EAHG,OAIQN,oBAAS,GAJjB,mBAIZO,EAJY,KAILC,EAJK,KAMdC,EAAUC,cAkDhB,OALAC,qBAAU,WACN,IAAMC,EAAQP,EAAU,GAAKQ,aAAY,kBAAMP,EAAWD,EAAU,KAAI,KACxE,OAAO,kBAAMS,cAAcF,MAC5B,CAACP,IAGA,yBAAKU,MAAS,CACVC,gBAAgB,OAAD,OAASC,IAAT,KACfC,mBAAoB,eACpBC,eAAgB,QAChBC,iBAAkB,cAElB,yBAAKC,UAAY,2CACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKA,UAAY,0BACb,kBAAC,IAAD,CAAKC,GAAK,MACN,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMD,UAAY,OACd,kBAAC,IAAD,KACQ,uBAAGN,MAAS,CAAEQ,UAAW,SAAUC,SAAU,GAAIC,WAAY,KAA7D,IAAoE,mDAApE,KACA,yBAAKC,IAAOC,IAAIZ,MAAS,CAAEa,YAAa,KACxC,kBAAC,IAAD,CAAYP,UAAY,8BAA8BN,MAAS,CAAEc,MAAO,IAAKC,WAAY,KACrF,kBAAC,IAAD,CACIC,KAAO,OACPC,KAAO,OACPC,YAAc,qCACdC,MAASjC,EACTkC,SApD1B,SAACC,GACnB,IAAMF,EAAQE,EAAEC,OAAOH,MACvBhC,EAAQgC,OAsD4B,kBAAC,IAAD,CAAKb,UAAY,yBAAyBN,MAAS,CAAEU,UAAW,GAAIK,WAAY,KAC5E,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQQ,SAAO,EAACC,MAAQ,YAAYxB,MAAUd,EAAKuC,OAAS,EAAI,CAAED,MAAO,SAAY,CAAEA,MAAO,QAAUE,QA5EtI,SAACC,GACfA,EAAMC,iBACF1C,GAAQE,EACRyC,YAAW,UAAW,OACrBC,MAAK,SAAAC,GACqB,MAAnBA,EAAQC,OACRtC,EAAQuC,KAAK,UAGbC,MAAM,sDAKdA,MAAM,iBA8DkC,aAEJ,kBAAC,IAAD,KACC1C,EACG,kBAAC,IAAD,CAAS+B,SAAO,EAACC,MAAQ,YAAYxB,MAAS,CAAEe,YAAa,GAAIoB,SAAU,QAASX,MAAO,QAAUE,QA9CpI,WACb,IAAIU,EAAIC,KAAKC,MAAM,IAAyB,IAAhBD,KAAKjD,UACjCC,EAAU+C,GACV7C,EAAW,IACXE,GAAS,GACToC,YAAW,gBAAiB,OAAQ,CAAEO,EAAGA,IACzCF,MAAM,gEAwCsC,aAGA,kBAAC,IAAD,CAAQX,SAAO,EAACC,MAAQ,YAAYxB,MAAsB,IAAZV,EAAgB,CAAEyB,YAAa,GAAIoB,SAAU,QAASX,MAAO,SAAY,CAAET,YAAa,GAAIoB,SAAU,QAASX,MAAO,SAAWE,QAAuB,IAAZpC,EA5DrN,WACjB,IAAI8C,EAAIC,KAAKC,MAAM,IAAyB,IAAhBD,KAAKjD,UACjCC,EAAU+C,GACV7C,EAAW,IACXsC,YAAW,gBAAiB,OAAQ,CAAEO,EAAGA,KAG1B,WACfF,MAAM,gCAoDsC,WACa5C,EAAU,GAAK,IAAM,GAAIA,EADtC,aAYpC,kBAAC,IAAD,MACA,kBAAC,IAAD","file":"static/js/22.b02a7bca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.89443a23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/QR.d5cb2df3.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardGroup,\r\n    Col,\r\n    Container,\r\n    Input,\r\n    InputGroup,\r\n    Row\r\n} from \"reactstrap\";\r\nimport background from \"../../images/background.jpg\"\r\nimport QR from \"../../images/QR.jpg\"\r\nimport { handleData } from \"../../Client_API\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Verification() {\r\n    const [ code, setCode ] = useState(\"\")\r\n    const [ random, setRandom ] = useState(\"\")\r\n    const [ counter, setCounter ] = useState(0)\r\n    const [ first, setTries ] = useState(true)\r\n\r\n    const history = useHistory();\r\n\r\n    const checkCode = (event) => {\r\n        event.preventDefault();\r\n        if (code == random) {\r\n            handleData(\"/verify\", \"GET\")\r\n            .then(results => {\r\n                if (results.status === 200) {\r\n                    history.push(\"/login\")\r\n                }\r\n                else {\r\n                    alert(\"Unable to register now. Please try again later.\")\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Wrong Code!\")\r\n        }\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        const value = e.target.value;\r\n        setCode(value)\r\n    }\r\n\r\n    const generateCode = () => {\r\n        let x = Math.floor(100000 + Math.random() * 900000)\r\n        setRandom(x)\r\n        setCounter(30)\r\n        handleData(\"/verification\", \"POST\", { x: x })\r\n    }\r\n\r\n    const denyResend = () => {\r\n        alert(\"Please wait for the timer.\")\r\n    }\r\n\r\n    const sendCode = () => {\r\n        let x = Math.floor(100000 + Math.random() * 900000)\r\n        setRandom(x)\r\n        setCounter(30)\r\n        setTries(false)\r\n        handleData(\"/verification\", \"POST\", { x: x })\r\n        alert(\"An telegram message has been sent to you for verification.\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n        return () => clearInterval(timer)\r\n    }, [counter])\r\n    \r\n    return (\r\n        <div style = {{\r\n            backgroundImage: `url(${background})`,\r\n            backgroundPosition: \"right bottom\",\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\"\r\n        }}>\r\n            <div className = \"app flex-row-reverse align-items-center\">\r\n                <Container>\r\n                    <Row className = \"justify-content-center\">\r\n                        <Col md = \"14\">\r\n                            <CardGroup>\r\n                                <Card className = \"p-3\">\r\n                                    <CardBody>\r\n                                            <p style = {{ textAlign: \"center\", fontSize: 20, marginTop: -10 }}> <strong> VERIFICATION! </strong> </p>\r\n                                            <img src = {QR} style = {{ marginRight: 8 }}/>\r\n                                            <InputGroup className = \"mb-1 justify-content-center\" style = {{ width: 200, marginLeft: 65 }}>\r\n                                                <Input\r\n                                                    type = \"text\"\r\n                                                    name = \"code\"\r\n                                                    placeholder = \"Enter your verification code here!\"\r\n                                                    value = {code}\r\n                                                    onChange = {onInputChange}\r\n                                                />\r\n                                            </InputGroup>\r\n\r\n                                            <Row className = \"justify-content-center\" style = {{ marginTop: 10, marginLeft: 45 }}>\r\n                                                <Col>\r\n                                                    <Button outline color = \"secondary\" style = { code.length > 0 ? { color: \"black\" } : { color: \"grey\" }} onClick = {checkCode}> Submit </Button>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                {first ? \r\n                                                    <Button  outline color = \"secondary\" style = {{ marginLeft: -42, position: \"fixed\", color: \"grey\" }} onClick = {sendCode}>\r\n                                                        Send Code\r\n                                                    </Button> : \r\n                                                    <Button outline color = \"secondary\" style = { counter === 0 ? { marginLeft: -42, position: \"fixed\", color: \"black\" } : { marginLeft: -42, position: \"fixed\", color: \"muted\" }} onClick = {counter === 0 ? generateCode : denyResend}> \r\n                                                        Resend ({counter < 10 ? \"0\" : \"\"}{counter})\r\n                                                    </Button>\r\n                                                }\r\n                                                </Col>\r\n                                            </Row>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </CardGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container/>\r\n                <Container/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Verification"],"sourceRoot":""}