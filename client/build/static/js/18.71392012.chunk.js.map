{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","images/background.jpg","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","images/icon.jpg","pages/Recovery/Recover.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","module","exports","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Recovery","useState","telegram","password","confirmPassword","code","input","setInput","setErr","setCode","passwordShown","setPasswordShown","passwordShown1","setPasswordShown1","correctCode","setCorrectCode","history","useHistory","handleInputChange","e","prev","validateInput","stateObj","style","backgroundImage","background","backgroundPosition","backgroundSize","backgroundRepeat","className","md","width","height","src","icon","paddingBottom","marginTop","fontSize","textAlign","addonType","type","onChange","placeholder","autoComplete","required","backgroundColor","onClick","onBlur","color","marginBottom","handleData","then","res","status","alert","text","results","cursor","fontPosition"],"mappings":"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","file":"static/js/18.71392012.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","module.exports = __webpack_public_path__ + \"static/media/background.89443a23.jpg\";","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","module.exports = __webpack_public_path__ + \"static/media/icon.83fbbf96.jpg\";","import React, { useState } from \"react\"\r\nimport {\r\n    Card, \r\n    CardBody, \r\n    CardGroup, \r\n    Col, \r\n    Container, \r\n    Input, \r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Row \r\n} from \"reactstrap\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport background from \"../../images/background.jpg\"\r\nimport icon from \"../../images/icon.jpg\"\r\nimport { handleData } from \"../../Client_API\"\r\n\r\nfunction Recovery() {\r\n    const [ input, setInput ] = useState({\r\n        telegram: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        code: \"\"\r\n    })\r\n    const [ err, setErr ] = useState({\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    })\r\n    const [ code, setCode ] = useState(\"\")\r\n    const [ passwordShown, setPasswordShown ] = useState(false)\r\n    const [ passwordShown1, setPasswordShown1 ] = useState(false)\r\n    const [ correctCode, setCorrectCode ] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    const togglePassword = () => {\r\n        setPasswordShown(!passwordShown)\r\n    }\r\n\r\n    const togglePassword1 = () => {\r\n        setPasswordShown1(!passwordShown1)\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setInput(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }))\r\n        validateInput(e)\r\n    }\r\n\r\n    const validateInput = (e) => {\r\n        const { name, value } = e.target\r\n        setErr(prev => {\r\n            const stateObj = { ...prev, [name]: \"\" };\r\n\r\n            switch (name) {\r\n        \r\n                case \"password\":\r\n                    if (!value) {\r\n                        stateObj[name] = \"Please enter Password.\";\r\n                    } \r\n                    else \r\n                    if (input.confirmPassword && value !== input.confirmPassword) {\r\n                        stateObj[\"confirmPassword\"] = \"Password and Confirm Password does not match.\";\r\n                    } \r\n                    else {\r\n                        stateObj[\"confirmPassword\"] = input.confirmPassword ? \"\" : err.confirmPassword;\r\n                    }\r\n                    break;\r\n        \r\n                case \"confirmPassword\":\r\n                    if (!value) {\r\n                        stateObj[name] = \"Please enter Password.\";\r\n                    } \r\n                    else \r\n                    if (input.password && value !== input.password) {\r\n                        stateObj[name] = \"Password and Confirm Password does not match.\";\r\n                    }\r\n                    break;\r\n        \r\n                default:\r\n                break;\r\n            }\r\n\r\n            return stateObj\r\n        })\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        handleData(\"/user_telegram\", \"POST\", { input })\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                return res.text()\r\n            }\r\n            else return false\r\n        })\r\n        .then(results => {\r\n            if (results) {\r\n                setCode(results)\r\n            }\r\n            else {\r\n                alert(\"Incorrect Telegram Chat ID\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const onSubmitCode = () => {\r\n        if (input.code === code) {\r\n            setCorrectCode(true)\r\n        }\r\n        else {\r\n            setCorrectCode(false)\r\n            alert(\"Incorrect Code!\")\r\n        }\r\n    }\r\n\r\n    const onSubmitPassword = () => {\r\n        handleData(\"/reset_password\", \"POST\", { input })\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                history.push(\"/login\")\r\n            }\r\n            else {\r\n                alert(\"Error changing Password. Try again later.\")\r\n            }\r\n        })\r\n    }\r\n    \r\n    const loginPage = () => {\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    const registerAccount = () => {\r\n        history.push(\"/registration\")\r\n    }\r\n\r\n    return (\r\n        <div style = {{  \r\n            backgroundImage: `url(${background})`,\r\n            backgroundPosition: \"right bottom\",\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\"\r\n        }}>\r\n            <div className = \"app flex-row-reverse align-items-center\">\r\n                <Container>\r\n                    <Row className = \"justify-content-center\">\r\n                        <Col md = \"14\">\r\n                            <CardGroup>\r\n                                <Card className = \"p-5\" style = {{ width: 380, height: 600 }}>\r\n                                    <CardBody>\r\n                                        <Row className = \"justify-content-center\">\r\n                                            <img src = {icon} style = {{ height: 200, paddingBottom: 10, marginTop: -10 }}/>\r\n                                        </Row>\r\n                                        <Row className = \"justify-content-center\">\r\n                                            <p style = {{ backgroundPosition: \"center\", fontSize: 18 }}> <strong> Reset Password </strong> </p>\r\n                                        </Row>\r\n\r\n                                        {code !== \"\" ? <div>\r\n                                            {correctCode ? <div>\r\n                                                <Row className = \"justify-content-center\">\r\n                                                    <p className = \"text-muted\" style = {{ backgroundPosition: \"center\", textAlign: \"center\" }}> Reset your password </p>\r\n                                                </Row>\r\n\r\n                                                <InputGroup className = \"mb-3\">\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText>\r\n                                                            <i className = \"icon-lock\"></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                    <Input \r\n                                                        type = {passwordShown ? \"text\" : \"password\"}\r\n                                                        name = \"password\" \r\n                                                        value = { input.password || \"\" } \r\n                                                        onChange = { handleInputChange } \r\n                                                        placeholder = \"Password\" \r\n                                                        autoComplete = \"telegram\" \r\n                                                        required \r\n                                                    />\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText style = {{ backgroundColor: \"white\" }}>\r\n                                                            <i className = \"fa fa-eye\" onClick = { togglePassword }></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                </InputGroup>\r\n                                                {err.password && <span className = \"err\"> {err.confirmPassword} </span>}\r\n\r\n                                                <InputGroup className = \"mb-3\">\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText>\r\n                                                            <i className = \"icon-lock\"></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                    <Input \r\n                                                        type = {passwordShown1 ? \"text\" : \"password\"}\r\n                                                        name = \"confirmPassword\" \r\n                                                        value = { input.confirmPassword || \"\" } \r\n                                                        onChange = { handleInputChange } \r\n                                                        onBlur = { validateInput }\r\n                                                        placeholder = \"Confirm Password\" \r\n                                                        autoComplete = \"telegram\" \r\n                                                        required \r\n                                                    />\r\n                                                    <InputGroupAddon addonType = \"prepend\">\r\n                                                        <InputGroupText style = {{ backgroundColor: \"white\" }}>\r\n                                                            <i className = \"fa fa-eye\" onClick = { togglePassword1 }></i>\r\n                                                        </InputGroupText>\r\n                                                    </InputGroupAddon>\r\n                                                </InputGroup>\r\n                                                {err.confirmPassword && <span className = \"err\"> {err.confirmPassword} </span>}\r\n\r\n                                                <Row className = \"justify-content-center\">\r\n                                                    <Col>\r\n                                                        <Input type = \"submit\" value = \"Reset Password\" color = \"primary\" className = \"px-6\" name = \"Reset Password\" style = {{ width: 243, marginBottom: 10 }} onClick = { onSubmitPassword }/>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div> :\r\n                                            <div> \r\n                                                <Row className = \"justify-content-center\">\r\n                                                    <p className = \"text-muted\" style = {{ backgroundPosition: \"center\", textAlign: \"center\" }}> Enter code sent to you. </p>\r\n                                                </Row>\r\n\r\n                                                <InputGroup className = \"mb-3\">\r\n                                                    <Input type = \"text\" name = \"code\" value = { input.code || \"\" } onChange = { handleInputChange } placeholder = \"Enter code\" required />\r\n                                                </InputGroup>\r\n\r\n                                                <Row className = \"justify-content-center\">\r\n                                                    <Col>\r\n                                                        <Input type = \"submit\" value = \"Enter\" color = \"primary\" className = \"px-6\" name = \"Enter\" style = {{ width: 243, marginBottom: 10 }}  onClick = { onSubmitCode }/>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>}\r\n                                        </div> : \r\n                                        <div>\r\n                                            <Row className = \"justify-content-center\">\r\n                                                <p className = \"text-muted\" style = {{ backgroundPosition: \"center\", textAlign: \"center\" }}> Enter your Telegram Chat ID below and we\"ll send you a link to reset your password. </p>\r\n                                            </Row>\r\n\r\n                                            <InputGroup className = \"mb-3\">\r\n                                                <Input type = \"text\" name = \"telegram\" value = { input.telegram || \"\" } onChange = { handleInputChange } placeholder = \"Enter your Telegram Chat ID\" autoComplete = \"telegram\" required />\r\n                                            </InputGroup>\r\n\r\n                                            <Row className = \"justify-content-center\">\r\n                                                <Col>\r\n                                                    <Input type = \"submit\" value = \"Enter\" color = \"primary\" className = \"px-6\" name = \"Enter\" style = {{ width: 243, marginBottom: 10 }}  onClick = { onSubmit }/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>}\r\n\r\n                                        <Row className = \"justify-content-center\" style = {{ backgroundPosition: \"center\", marginBottom: 40 }}>\r\n                                            <a style = {{ cursor: \"pointer\" }} onClick = { loginPage }>\r\n                                                <u>\r\n                                                    Log In\r\n                                                </u>\r\n                                            </a>\r\n                                            &nbsp;\r\n                                            OR\r\n                                            &nbsp;\r\n                                            <a style = {{ cursor: \"pointer\" }} onClick = { registerAccount }>\r\n                                                <u>\r\n                                                    Sign Up\r\n                                                </u>\r\n                                            </a>\r\n                                        </Row>\r\n\r\n                                        <Row className = \"justify-content-center\">\r\n                                            <p className = \"text-muted\" style = {{ backgroundPosition: \"center\", fontPosition: \"center\", marginBottom: -50 }}> Webpage solely built by YongJun. </p>\r\n                                        </Row>\r\n                                    </CardBody>\r\n                                </Card> \r\n                            </CardGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container />\r\n                <Container />\r\n                <Container />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recovery"],"sourceRoot":""}