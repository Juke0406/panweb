{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","containers/DefaultLayout/DefaultFooter.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","DefaultFooter","props","state","time","intervaltimeId","updateTime","bind","intervalId","setInterval","this","setState","clearInterval","today","Date","date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","dateTime","children","Fragment","className","Component","defaultProps"],"mappings":"mGACe,SAASA,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDTM,CAA6BJ,EAAQC,GAGlD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GAEpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE,E,oEERHW,E,kDACF,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACEC,MAAQ,CACTC,KAAO,KACPC,eAAiB,MAErB,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBANH,E,gEAUf,IAAIC,EAAaC,YAAYC,KAAKJ,WAAY,KAC9CI,KAAKC,SAAS,CACVN,eAAgBG,M,6CAKpBI,cAAcF,KAAKP,MAAME,kB,mCAIzB,IAAIQ,EAAQ,IAAIC,KACZC,EAAI,UAAMF,EAAMG,UAAZ,YAAyBH,EAAMI,WAAW,EAA1C,YAA+CJ,EAAMK,eACzDd,EAAI,UAAOS,EAAMM,WAAa,GAAnB,WAA4BN,EAAMM,YAAeN,EAAMM,WAA9D,YAA8EN,EAAMO,aAAe,GAArB,WAA8BP,EAAMO,cAAiBP,EAAMO,aAAzI,YAA2JP,EAAMQ,aAAe,GAArB,WAA8BR,EAAMQ,cAAiBR,EAAMQ,cAC1NC,EAAQ,UAAMP,EAAN,YAAcX,GAC1BM,KAAKC,SAAS,CAAEP,KAAMkB,M,+BAGhB,IAAD,EAE+BZ,KAAKR,MAFpC,EAEGqB,SAFH,kBAIL,OACI,kBAAC,IAAMC,SAAP,KACI,qDACA,0BAAMC,UAAY,WAAlB,IAA+Bf,KAAKP,MAAMC,KAA1C,U,GApCYsB,aA2C5BzB,EAAc0B,aA7CO,GA+CN1B","file":"static/js/23.0eb9e4b2.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultFooter extends Component {\n    constructor(props) {\n\t    super(props);\n        this.state = {\n            time : null,\n            intervaltimeId : null\n        }\n        this.updateTime = this.updateTime.bind(this);\n    }\n    \n    componentDidMount() {\n        let intervalId = setInterval(this.updateTime, 1000);\n        this.setState({\n            intervaltimeId: intervalId\n        });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.intervaltimeId);\n    }\n    \n    updateTime() {\n        let today = new Date();\n        let date = `${today.getDate()}/${today.getMonth()+1}/${today.getFullYear()}`;\n        let time = `${ today.getHours() < 10 ? `0${today.getHours()}` : today.getHours() }:${ today.getMinutes() < 10 ? `0${today.getMinutes()}` : today.getMinutes() }:${ today.getSeconds() < 10 ? `0${today.getSeconds()}` : today.getSeconds() }`;\n        let dateTime = `${date} ${time}`;\n        this.setState({ time: dateTime });\n    }\n  \n    render() {\n\n        const { children, ...attributes } = this.props;\n\n        return (\n            <React.Fragment>\n                <span> YongJun's Website </span>\n                <span className = \"ml-auto\"> { this.state.time } </span>\n            </React.Fragment>\n        );\n    }\n}\n\nDefaultFooter.propTypes = propTypes;\nDefaultFooter.defaultProps = defaultProps;\n\nexport default DefaultFooter;"],"sourceRoot":""}