{"version":3,"sources":["Client_API.js","authentication.jsx","polyfill.js","App.jsx","serviceWorker.js","index.js"],"names":["handleData","URL","mode","data","Promise","resolve","reject","a","config","method","headers","redirect","body","JSON","stringify","fetch","then","result","error","withAuth","ComponentToProtect","state","loading","res","status","json","localStorage","setItem","window","location","host","admin_level","setState","catch","err","console","log","this","to","Fragment","props","Component","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","React","lazy","Login","Registration","Verification","Recovery","Page404","Page500","App","title","Suspense","fallback","className","exact","path","name","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60b449b2.chunk.js","sourcesContent":["export const handleData = (URL, mode, data) => new Promise(async(resolve, reject) => {\r\n    try {\r\n        if (mode === \"GET\") {\r\n            var config = {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                redirect: 'follow'\r\n            };\r\n        } else\r\n        if (mode === \"POST\") {\r\n            config = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                redirect: 'follow',\r\n                body: JSON.stringify(data)\r\n            }\r\n        }\r\n        fetch(URL, config)\r\n        .then(result => resolve(result))\r\n    }\r\n    catch(error) {\r\n        reject(error)\r\n    }\r\n});","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { handleData } from './Client_API';\n\nexport default function withAuth(ComponentToProtect) {\n\t\n    return class extends Component {\n        constructor() {\n            super();\n            this.state = {\n                loading: true,\n                redirect: false,\n            };\n        }\n\n        componentDidMount() {\n            handleData('/checkToken', 'GET')\n            .then(res => {\n                if (res.status === 200) return res.json()\n                else return false\n            })\n            .then(result => {\n                if (result) {\n                    localStorage.setItem(`${window.location.host}-role`, result.admin_level);\n                    this.setState({ loading: false });\n                }\n                else {\n                    this.setState({ loading: false, redirect: true });\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            });\n        }\n\n\n        render() {\n            const { loading, redirect } = this.state;\n            if (loading) {\n                return null;\n            }\n            if (redirect) {\n                return <Redirect to = \"/login\" />;\n            }\n            return (\n                <React.Fragment>\n                    <ComponentToProtect {...this.props} />\n                </React.Fragment>\n            );\n        }\n    }\n}","import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\nimport 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\nimport 'core-js/es6/set'\nimport 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n    if ( typeof window.CustomEvent === \"function\" ) return false\n\n    function CustomEvent ( event, params ) {\n        params = params || { bubbles: false, cancelable: false, detail: undefined }\n        var evt = document.createEvent( 'CustomEvent' )\n        evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n        return evt\n    }\n\n    CustomEvent.prototype = window.Event.prototype\n\n    window.CustomEvent = CustomEvent\n})()","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport withAuth from './authentication';\n\nconst loading = () => <div className = \"animated fadeIn pt-3 text-center\"> Loading... </div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout/DefaultLayout.js'));\n\n// Pages\nconst Login = React.lazy(() => import('./pages/Login/Login.js'));\nconst Registration = React.lazy(() => import('./pages/Registration/Registration.js'));\nconst Verification = React.lazy(() => import('./pages/Verification/Verification.js'));\nconst Recovery = React.lazy(() => import('./pages/Recovery/Recover.js'))\nconst Page404 = React.lazy(() => import('./pages/Page404/Page404.js'));\nconst Page500 = React.lazy(() => import('./pages/Page500/Page500.js'));\n\nclass App extends Component {\n\t\n\tcomponentDidMount() {\n\t\tdocument.title = \"PanWeb!\";\n\t}\n  \n    render() {\n        return (\n            <HashRouter>\n                <React.Suspense fallback = { loading() }>\n                    <Switch>\n                        <Route exact path = \"/login\" name = \"Login Page\" component = { Login } />\n                        <Route exact path = \"/registration\" name = \"Register Page\" component = { Registration } />\n                        <Route exact path = \"/verification\" name = \"Verify Your Email\" component = { Verification }/>\n                        <Route exact path = \"/recovery\" name = \"Recovery\" component = { Recovery } />\n                        <Route exact path = \"/404\" name = \"Page 404\" component = { Page404 } />\n                        <Route exact path = \"/500\" name = \"Page 500\" component = { Page500 } />\n                        <Route path = \"/\" name = \"Home\" component = { withAuth(DefaultLayout) } />\n                    </Switch>\n                </React.Suspense>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            }\n            else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n        registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n                if (installingWorker.state === 'installed') {\n                    if (navigator.serviceWorker.controller) {\n                        // At this point, the old content will have been purged and\n                        // the fresh content will have been added to the cache.\n                        // It's the perfect time to display a \"New content is\n                        // available; please refresh.\" message in your web app.\n                        console.log('New content is available; please refresh.');\n\n                        // Execute callback\n                        if (config.onUpdate) {\n                            config.onUpdate(registration);\n                        }\n                    }\n                    else {\n                        // At this point, everything has been precached.\n                        // It's the perfect time to display a\n                        // \"Content is cached for offline use.\" message.\n                        console.log('Content is cached for offline use.');\n\n                        // Execute callback\n                        if (config.onSuccess) {\n                            config.onSuccess(registration);\n                        }\n                    }\n                }\n            };\n        };\n    })\n    .catch(error => {\n        console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n    .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n            response.status === 404 ||\n            response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n            // No service worker found. Probably a different app. Reload the page.\n            navigator.serviceWorker.ready.then(registration => {\n                registration.unregister().then(() => {\n                window.location.reload();\n                });\n            });\n        } \n        else {\n            // Service worker found. Proceed as normal.\n            registerValidSW(swUrl, config);\n        }\n    })\n    .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n    });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}